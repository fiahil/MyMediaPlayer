<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Rectangle Name="Background" Fill="{DynamicResource FgBrush}" />
            <Image Name="Front" Source="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Stretch="Uniform" />
            <Image Name="Back" Source="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Stretch="Uniform" Opacity="0.50" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Background" Property="Fill" Value="{DynamicResource PressBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Back" Property="Effect">
                    <Setter.Value>
                        <BlurEffect Radius="7" KernelType="Box" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="MediaScreenTemplate" TargetType="{x:Type Label}">
        <Rectangle Name="Background" Fill="{DynamicResource MediaScreenBgBrush}" />
    </ControlTemplate>

    <ControlTemplate x:Key="SliderTemplate" TargetType="{x:Type Slider}">
        <Grid>
            <Border Name="TrackBackground" Margin="0" Padding="0" Height="10" Grid.Row="1" BorderThickness="0" />
            <Track Grid.Row="1" Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource SliderButtonDown}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{DynamicResource SliderThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource SliderButtonUp}" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="SliderButtonDownTemplate">
        <Rectangle Fill="{DynamicResource SliderBgDownBrush}" />
    </ControlTemplate>

    <ControlTemplate x:Key="SliderButtonUpTemplate">
        <Rectangle Fill="{DynamicResource SliderBgUpBrush}" />
    </ControlTemplate>

    <ControlTemplate x:Key="SliderThumbTemplate">
        <Rectangle Fill="{DynamicResource SliderFgBrush}" Width="10" Height="10" />
    </ControlTemplate>

    <ControlTemplate x:Key="SeparatorTemplate" TargetType="{x:Type Separator}">
        <Grid>
            <Rectangle Height="2" Fill="{TemplateBinding BorderBrush}" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="MenuItemTemplate" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition x:Name="Col3" Width="14"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter Grid.Column="1" Margin="{TemplateBinding Padding}" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header"/>

                <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false">
                    <Border x:Name="SubMenuBorder" BorderBrush="{TemplateBinding Background}" Background="{TemplateBinding Background}" BorderThickness="1" Padding="2,2,2,2">
                        <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </Grid>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        

        <ControlTemplate.Triggers>
            <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
                <Setter Property="Width" Value="Auto" TargetName="Col3"/>
            </Trigger>

            <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="DockPanel.Dock" Value="Top"/>
            </Trigger>

            <!-- Role = SubMenuItem : this is a child menu item which has children-->
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="DockPanel.Dock" Value="Top"/>
            </Trigger>

            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" Value="{DynamicResource FgBrush}" TargetName="Border"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="TabItemTemplate" TargetType="TabItem">
        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter Margin="{TemplateBinding Padding}" x:Name="Header" ContentSource="Header" />
        </Border>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource FgBrush}" />
            </Trigger>
            
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource FgBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>